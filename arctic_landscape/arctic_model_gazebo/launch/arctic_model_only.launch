<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot" default="default_robot"/>

  <arg name="world" default="arctic3"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="debug" default="false"/>

  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>

  <arg name="wheel_dist" default="0.7" />
  <arg name="wheel_radius" default="0.22" />
  
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="1"/>

  <env name="GAZEBO_MODEL_PATH"
    value="$(find arctic_model_gazebo)/../models:$(optenv GAZEBO_MODEL_PATH)"/>

  <env name="GAZEBO_RESOURCE_PATH"
    value="$(find arctic_model_gazebo):$(optenv GAZEBO_RESOURCE_PATH)"/>

  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- Launch world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/$(arg world).world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="True"/>
  </include>
  

  <!-- Spawn robot -->
  <param name="$(arg robot)/robot_description" 
    command="$(find xacro)/xacro --inorder '$(find arctic_model_description)/urdf/arctic_model.xacro'"/>
  
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
    args="-param robot_description -urdf -x $(arg x) -y $(arg y) -z $(arg z) -model arctic_model"
    ns="$(arg robot)"/>
    <!-- args="-param robot_description -urdf -x $(arg x) -z $(arg z) -model arctic_model" -->
  
  <rosparam file="$(find arctic_model_gazebo)/config/arctic_control.yaml" command="load" ns="$(arg robot)"/>
    
  <node name="controller_spawner" pkg="controller_manager" type="spawner" 
    respawn="false" output="screen" ns="$(arg robot)"
    args="camera_yaw_controller camera_pitch_controller manip_rotation_controller manip_stock_controller mobile_base_controller joint_state_controller" />
    
  <!--node name="gazebo_robot_driver" pkg="gazebo_robot_driver" type="gazebo_robot_driver_node"
    respawn="false" output="screen" ns="$(arg robot)">
    <param name="sensor_update_rate" value="5" />
    <param name="wheel_dist" value="0.7" />
    <param name="wheel_radius" value="0.22" />
    <param name="encoder_ticks_per_turn" value="50" />
    <param name="lwheel_joint" value="lwheel_j" />
    <param name="rwheel_joint" value="rwheel_j" />
    <param name="mov_speed" value="1" />
    <param name="rot_speed" value="45" />
  </node-->

  <!-- Gazebo odometry (ground truth) -->
  <node name="odom_gazebo_republisher" pkg="odom_gazebo_republisher" type="odom_republisher.py"
    ns="$(arg robot)">
    <remap from="odom" to="gazebo_ground_truth_odom" />
  </node>

  <!-- Disable compressed depth image plugin since the cameras on the robot are not depth-cameras -->
  <rosparam param="disable_pub_plugins"
    ns="$(arg robot)/camera1/image_raw">
    - 'image_transport/compressedDepth'
  </rosparam>

  <node pkg="arctic_manip_service" name="arctic_manip_service_node" type="arctic_manip_service_node.py" ns="$(arg robot)" />

  <node pkg="signproc_soar" name="state_simulator" type="state_simulator.py" ns="$(arg robot)" />
  
</launch>
